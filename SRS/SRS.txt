Lastenheft?

Welche "konkreten" Anforderungen hat der "Kunde" an den Entwickler gestellt?

Wichtig im SRS:

Korrekt
Unmehrdeutigkeit
Vollständig
Konsistent
Bewertet nach Wichtigkeit und/oder Stabilität
Verifizierbar
Modifizierbar
Verfolgbar (Traceable)

Erklärung:
Korrekt und Vollständig bezieht sich dabei auf die SRS bezüglich der tatsächlichen Anforderungen (externer Bezug). Konsistenz bezieht sich auf die Anforderungen in Form der SRS alleine (interner Bezug). Unmehrdeutigkeit lässt genau eine Interpretation zu, Verifizierbarkeit begrenzt die Komplexität einer Anforderungsbeschreibung zusätzlich auf ein effizient prüfbares Maß. Modifizierbarkeit setzt insbesondere Redundanzfreiheit voraus. Traceability umfasst die vor- und rückwärtige Richtung.

Pflichtenheft!!

Gerade bei den Requirements müssen die oben genannten Stichpunkte erfüllt werden.

==> qualitative/quantitative Definition der umzusetzenden Software.
- Zweck
- geplanter Einsatz in der Praxis (TESTS)
- Funktionsumfang der Software

Inhalt des SRS:

- Name des Produkts (vorgegeben: ISGCI) ?!
- Name des Herstellers ?! Graph Magaa ? :D

Mögliche Struktur, die angepasst werden kann (Wiki):

1. Einleitung: 
        definiere erwartete Leserschaft des Dokuments & Version History.
        Grund für die Erstellung der neuen Version, bzw. Zusammenfassung der Veränderungen
    1. Zweck (des Dokuments)
        Wieso braucht man das System. Kurze Beschreibung der System Funktionen & wie es mit anderen Systemen arbeiten soll.
	(wie passt das System in gesamte Unternehmen || stragische Ziele der Organisation der Software
    2. Umfang (des Softwareprodukts)
        
    3. Erläuterungen zu Begriffen und / oder Abkürzungen
        Definiere technische Begriffe, die im Dokument verwendet werden und nicht "klar" sind.
        Keine Annahmen über die Erfahrungen und Fachkenntnis des Lesers machen.
    4. Verweise auf sonstige Ressourcen oder Quellen
        Hyperlinks? http://www.graphclasses.org/
        ISGCI, JGraphX als Grafikbibliothek
    5. Übersicht (Wie ist das Dokument aufgebaut?)
2. Allgemeine Beschreibung (des Softwareprodukts)
    1. Produktperspektive (zu anderen Softwareprodukten)
        Beschreibung, dass unseres Produkt als "Schnittstelle" zwischen JGraphX und ISGCI fungieren wird
        und wie diese miteinander interagieren, bzw. wie darauf aufgebaut wird.
    2. Produktfunktionen (eine Zusammenfassung und Übersicht)
        Beschreibung der Funktionen und entsprechende tabellarische Übersicht.
    3. Benutzermerkmale (Informationen zu erwarteten Nutzern, z.B. Bildung, Erfahrung, Sachkenntnis)
        Welche Kenntnisse haben die potetiellen Nutzer des Systems, bzw. welche Personengruppen werden das System nutzen.
    4. Einschränkungen (für den Entwickler)
        zeitliche, Plattform, Funktionenaufwand
    5. Annahmen und Abhängigkeiten (nicht Realisierbares und auf spätere Versionen verschobene Eigenschaften)
        Brain-Storming
3. Spezifische Anforderungen (im Gegensatz zu 2.)
    1. funktionale Anforderungen (Stark abhängig von der Art des Softwareprodukts)
    2. nicht-funktionale Anforderungen
    3. externe Schnittstellen
        JGraphX, JGraphT, ISGCI
    4. Design Constraints
    5. Anforderungen an Performance
        schnelle Laufzeit, wie aktuelles System, damit Änderungen sofort sichtbar sind
    6. Qualitätsanforderungen
    7. Sonstige Anforderungen

oft auftretende Schwierigkeiten:

- mögliche Interessenkonflikte, also unterschiedliche Ziele seitens der Nutzer
- unklare oder sogar unbekannte technische Rahmenbedingungen
- sich ändernde Anforderungen oder Prioritäten schon während des Entwurfsprozesses

Kommentar:

Das Ganze wird auf Englisch geschrieben, keine Angst.
Ich hab jetzt aber nicht die Sommerville Vorlage genommen, sondern vielmehr die IEEE 830-1998 SRS Standard, wobei man gerne auch Elemente vom Sommerville übernehmen kann, falls diese passen. Im Grunde wird sowieso immer alles angepasst und modifiziert, dass es am besten zu dem umzusetzenden Projekt passt.

Die einzige Frage bleibt: Setzen wir ein komplett neues System um, also wollen wir die Schnittstelle als neues System bezeichnen, oder vielmehr als Erweiterung beider Systeme (JGraphX, ISGCI).

